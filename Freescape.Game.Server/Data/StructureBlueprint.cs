//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Freescape.Game.Server.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class StructureBlueprint
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public StructureBlueprint()
        {
            this.ConstructionSites = new HashSet<ConstructionSite>();
            this.PCTerritoryFlags = new HashSet<PCTerritoryFlag>();
            this.PCTerritoryFlagsStructures = new HashSet<PCTerritoryFlagsStructure>();
            this.StructureComponents = new HashSet<StructureComponent>();
        }
    
        public int StructureBlueprintID { get; set; }
        public int StructureCategoryID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string Resref { get; set; }
        public bool IsActive { get; set; }
        public bool IsTerritoryFlag { get; set; }
        public bool IsUseable { get; set; }
        public int ItemStorageCount { get; set; }
        public int VanityCount { get; set; }
        public double MaxBuildDistance { get; set; }
        public int Level { get; set; }
        public Nullable<int> PerkID { get; set; }
        public int RequiredPerkLevel { get; set; }
        public bool GivesSkillXP { get; set; }
        public int SpecialCount { get; set; }
        public bool IsVanity { get; set; }
        public bool IsSpecial { get; set; }
        public int CraftTierLevel { get; set; }
        public int ResourceCount { get; set; }
        public int BuildingCount { get; set; }
        public bool IsResource { get; set; }
        public bool IsBuilding { get; set; }
        public string ResourceResref { get; set; }
        public Nullable<int> BuildingCategoryID { get; set; }
    
        public virtual BuildingCategory BuildingCategory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConstructionSite> ConstructionSites { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PCTerritoryFlag> PCTerritoryFlags { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PCTerritoryFlagsStructure> PCTerritoryFlagsStructures { get; set; }
        public virtual Perk Perk { get; set; }
        public virtual StructureCategory StructureCategory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<StructureComponent> StructureComponents { get; set; }
    }
}
